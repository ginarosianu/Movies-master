{"version":3,"sources":["src/app/app.component.html","src/app/comment/comment-add/comment-add.component.html","src/app/comment/comment.component.html","src/app/counter/counter.component.html","src/app/fetch-data/fetch-data.component.html","src/app/home/home.component.html","src/app/movie/movie-add/movie-add.component.html","src/app/movie/movie-details/movie-details.component.html","src/app/movie/movie.component.html","src/app/nav-menu/nav-menu.component.html","src/$_lazy_route_resource lazy namespace object","src/app/app.component.ts","src/app/app.module.ts","src/app/comment/comment-add/comment-add.component.css","src/app/comment/comment-add/comment-add.component.ts","src/app/comment/comment.component.ts","src/app/counter/counter.component.ts","src/app/fetch-data/fetch-data.component.ts","src/app/home/home.component.ts","src/app/home/images/movie1.jpg","src/app/movie/movie-add/movie-add.component.css","src/app/movie/movie-add/movie-add.component.ts","src/app/movie/movie-details/movie-details.component.css","src/app/movie/movie-details/movie-details.component.ts","src/app/movie/movie.component.ts","src/app/movie/shared/enum/movieGenre.enum.ts","src/app/movie/shared/enum/movieWatched.ts","src/app/movie/shared/movie.service.ts","src/app/nav-menu/nav-menu.component.css","src/app/nav-menu/nav-menu.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<body>\\n    <app-nav-menu></app-nav-menu>\\n\\n    <div class=\\\"container\\\">\\n\\n        <router-outlet></router-outlet>\\n\\n    </div>\\n\\n</body>\\n\"","export default \"<p>comment-add works!</p>\\n\"","export default \"<h1 id=\\\"tableLabel\\\">COMMENTS</h1>\\n\\n<p>This is our Comments Board.</p>\\n\\n<p *ngIf=\\\"!comments\\\"><em>Loading...</em></p>\\n\\n\\n\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"comments\\\">\\n    <thead>\\n        <tr>\\n            <th>Author</th>\\n            <th>Content</th>\\n            <th>Important</th>\\n            <th>For Movie</th>\\n            <th>Operations</th>\\n\\n        </tr>\\n    </thead>\\n\\n    <tbody>\\n        <tr *ngFor=\\\"let comment of comments\\\">\\n            <td>{{ comment.author }}</td>\\n            <td>{{ comment.content }}</td>\\n            <td>{{ comment.important }}</td>\\n            <td>{{ comment.movieid }}</td>\\n            <td>\\n                <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/comment', comment.id]\\\" routerLinkActive=\\\"active\\\">Details</button> |\\n                <button class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/comment-add', comment.id]\\\">Edit</button> |\\n                <button class=\\\"btn btn-danger\\\" (click)=\\\" delete(comment.id)\\\">Delete</button>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n\\n<td><a class=\\\"btn btn-success\\\" [routerLink]=\\\"['/comment-add/0']\\\">Add comment</a></td>\\n\\n\\n\\n\\n\\n\"","export default \"<h1>Counter</h1>\\n\\n<p>This is a simple example of an Angular component.</p>\\n\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\n\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\n\\n\\n\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\n\\n<p>{{name}}</p>\\n\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\n\\n\\n<input type=\\\"text\\\" value=\\\"{{name}}\\\" />\\n\\n\\n\\n<p>{{name}}</p>\\n<p>{{name}}</p>\\n<p>{{name}}</p>\\n<p>{{name}}</p>\\n<p>{{name}}</p>\\n<p>{{name}}</p>\\n<p>{{name}}</p>\\n<p>{{name}}</p>\\n<p>{{name}}</p>\\n\\n\\n<input type=\\\"text\\\" value=\\\"{{name}}\\\" />\\n\\n\\n\\n<p> {{name}}</p>\\n\"","export default \"<h1 id=\\\"tableLabel\\\">MOVIES</h1>\\n\\n<p>This is our Movies Board.</p>\\n\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\n\\n\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"movies\\\">\\n    <thead>\\n        <tr>\\n            <th>Title</th>\\n            <th>Description</th>\\n            <th>Genre</th>\\n            <th>Duration minutes</th>\\n            <th>Year of fRelease</th>\\n            <th>Director</th>\\n            <th>Comments</th>\\n\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let movie of movies\\\">\\n            <td>{{ movie.title }}</td>\\n            <td>{{ movie.description }}</td>\\n            <td>{{ movie.genre }}</td>\\n            <td>{{ movie.minute }}</td>\\n            <td>{{ movie.yearOfRelease }}</td>\\n            <td>{{ movie.director }}</td>\\n            <td>{{ movie.comments }}</td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n\\n<p>Mai jos facem adaugarea unui film</p>\\n\\n\\n<!--<input [(ngModel)]=\\\"name\\\" />\\n\\n<p>{{name}}</p>\\n\\n\\n\\n<button (click)=\\\"submit()\\\">Submit!</button>\\n\\n-->\\n\"","export default \"<!--<h1>Hello, world!</h1>\\n<p>Welcome to your new single-page application, built with:</p>-->\\n\\n<img src=\\\"{{heroImageUrl}}\\\" style=\\\"width:100%\\\">\\n\\n\"","export default \"<!--<p>movie-add works!</p>-->\\n<h1 id=\\\"tableLabel\\\"> Add new movie</h1>\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\" row\\\">\\n        <div class=\\\" col-10\\\">\\n            <div class=\\\" jumbotron\\\">\\n                <form [formGroup]=\\\"movieForm\\\" (ngSubmit)=\\\"onSubmit(movieForm)\\\">\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label>Title</label>\\n                        <input type=\\\"text\\\" class=\\\" form-control\\\" formControlName=\\\"title\\\" />\\n                        <!--<span *ngIf=\\\"form.get('title').errors?.required\\\">Title is required</span>-->\\n                        <span *ngIf=\\\"movieForm.get('title').errors?.serverError\\\">\\n                            {{ movieForm.get('title').errors?.serverError }}\\n                        </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label>Description</label>\\n                        <input type=\\\"text\\\" class=\\\" form-control\\\" formControlName=\\\"description\\\" />\\n                        <!--<span *ngIf=\\\"form.get('description').errors?.required\\\">Description is required</span>-->\\n                        <span *ngIf=\\\"movieForm.get('description').errors?.serverError\\\">\\n                            {{ movieForm.get('description').errors?.serverError }}\\n                        </span>\\n                    </div>\\n\\n                    <!--<div class=\\\"form-group\\\">\\n                        <label>Genre</label>\\n                        <select class=\\\" form-control\\\" formControlName=\\\"genre\\\">\\n                            <option value=\\\"0\\\">Select genre</option>\\n                            <option *ngFor=\\\"let movieGenre of movieGenres\\\" [value]=\\\"movieGenre\\\">-->\\n                                <!--{{movieGenre}}-->\\n                            <!--</option>\\n                        </select>\\n                    </div>-->\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label>Genre</label>\\n                        <select class=\\\" form-control\\\" formControlName=\\\"genre\\\">\\n                            <option value=\\\"action\\\">Action </option>\\n                            <option value=\\\"comedy\\\">Comedy</option>\\n                            <option value=\\\"horror\\\">Horror </option>\\n                            <option value=\\\"thriller\\\">Thriller </option>\\n                        \\n                        </select>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label>Minute</label>\\n                        <input type=\\\"number\\\" class=\\\" form-control\\\" placeholder=\\\"0,00\\\" formControlName=\\\"minute\\\" />\\n                        <!--<span *ngIf=\\\"form.get('minute').errors?.required\\\">Duration is required</span>-->\\n                        <span *ngIf=\\\"movieForm.get('minute').errors?.serverError\\\">\\n                            {{ movieForm.get('minute').errors?.serverError }}\\n                        </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label>Year of Release</label>\\n                        <input type=\\\"number\\\" class=\\\" form-control\\\" formControlName=\\\"yearOfRelease\\\" />\\n                        <span *ngIf=\\\"movieForm.get('yearOfRelease').errors?.serverError\\\">\\n                            {{ movieForm.get('yearOfRelease').errors?.serverError }}\\n                        </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label>Director</label>\\n                        <input type=\\\"text\\\" class=\\\" form-control\\\" formControlName=\\\"director\\\" />\\n                        <!--<span *ngIf=\\\"form.get('director').errors?.required\\\">Director is required</span>-->\\n                        <span *ngIf=\\\"movieForm.get('director').errors?.serverError\\\">\\n                            {{ movieForm.get('director').errors?.serverError }}\\n                        </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label>Date</label>\\n                        <input type=\\\"datetime\\\" class=\\\" form-control\\\" placeholder=\\\"2020-06-14\\\" formControlName=\\\"dateAdded\\\" />\\n                        <!--<span *ngIf=\\\"form.get('dateAdded').errors?.required\\\">Date is required</span>-->\\n                        <span *ngIf=\\\"movieForm.get('dateAdded').errors?.serverError\\\">\\n                            {{ movieForm.get('dateAdded').errors?.serverError }}\\n                        </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label>Rating</label>\\n                        <input type=\\\"number\\\" class=\\\" form-control\\\" placeholder=\\\"0,00\\\" formControlName=\\\"rating\\\" />\\n                        <span *ngIf=\\\"movieForm.get('rating').errors?.serverError\\\">\\n                            {{ movieForm.get('rating').errors?.serverError }}\\n                        </span>\\n                    </div>\\n\\n                    <!--<div class=\\\"form-group\\\">\\n                        <label>Watched</label>\\n                        <select class=\\\" form-control\\\" formControlName=\\\"watched\\\">\\n                            <option value=\\\"0\\\">Select</option>\\n                            <option *ngFor=\\\"let movieWatched of movieWatcheds\\\" [value]=\\\"movieWatched\\\">-->\\n                                <!--{{movieWatched}}-->\\n                            <!--</option>\\n                        </select>\\n                    </div>-->\\n\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label>Watched</label>\\n                        <select class=\\\" form-control\\\" formControlName=\\\"watched\\\">\\n                            <option value=\\\"true\\\" selected=\\\"selected\\\">Yes</option>\\n                            <option value=\\\"false\\\">No</option>\\n                        </select>\\n                    </div>\\n\\n                    <button class=\\\"btn btn-success float-left\\\" type='submit' [disabled]=\\\"!movieForm.valid\\\">Save</button>\\n                    <button class=\\\"btn btn-success float-right\\\" (click)=\\\"goBack()\\\">Back</button>\\n\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","export default \"<p>movie-details works!</p>\\n\\n\\n<p *ngIf=\\\"!movie\\\"><em>Loading ...</em></p>\\n\\n<a [routerLink]=\\\"['/movie']\\\" routerLinkActive=\\\"active\\\">Back</a>\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"movie\\\">\\n    <tbody>\\n        <tr>\\n            <th>Title</th>\\n            <td>{{ movie.title }}</td>\\n        </tr>\\n        <tr>\\n            <th>Description</th>\\n            <td>{{ movie.description }}</td>\\n        </tr>\\n        <tr>\\n            <th>Genre</th>\\n            <td>{{ movie.genre }}</td>\\n        </tr>\\n\\n        <tr>\\n            <th>Duration minutes</th>\\n            <td>{{ movie.minute }}</td>\\n        </tr>\\n\\n        <tr>\\n            <th>Year of Release</th>\\n            <td>{{ movie.yearOfRelease }}</td>\\n        </tr>\\n\\n        <tr>\\n            <th>Director</th>\\n            <td>{{ movie.director }}</td>\\n        </tr>\\n\\n        <tr>\\n            <th>DateAdded</th>\\n            <td>{{ movie.dateAdded }}</td>\\n        </tr>\\n\\n        <tr>\\n            <th>Rating</th>\\n            <td>{{ movie.rating }}</td>\\n        </tr>\\n\\n        <tr>\\n            <th>Watched</th>\\n            <td>{{ movie.watched }}</td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<th>Comments</th>\\n<table style=\\\"width:100%\\\" *ngIf=\\\"movie\\\">\\n    <thead>\\n        <tr>\\n            <th style=\\\"width:30%\\\">Content</th>\\n            <th style=\\\"width:30%\\\">Author</th>\\n            <th style=\\\"width:30%\\\">Important</th>\\n        </tr>\\n    </thead>\\n    <tr *ngFor=\\\"let comment of movie.comments\\\">\\n        <td style=\\\"width:30%\\\">{{ comment.content }}</td>\\n        <td style=\\\"width:30%\\\">{{ comment.author }}</td>\\n        <td style=\\\"width:30%\\\">{{ comment.important}}</td>\\n    </tr>\\n</table>\\n<a [routerLink]=\\\"['/movie']\\\" routerLinkActive=\\\"active\\\">Back</a>\\n\\n\\n\"","export default \"<h1 id=\\\"tableLabel\\\">MOVIES</h1>\\n\\n<p>This is our Movies Board.</p>\\n\\n<p *ngIf=\\\"!movies\\\"><em>Loading...</em></p>\\n\\n\\n<table style=\\\"width:100%\\\" class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"movies\\\">\\n    <thead>\\n        <tr>\\n            <th style=\\\"width:10%\\\">Title</th>\\n            <th style=\\\"width:10%\\\">Description</th>\\n            <th style=\\\"width:10%\\\">Genre</th>\\n            <th style=\\\"width:10%\\\">Duration minutes</th>\\n            <th style=\\\"width:10%\\\">Year of Release</th>\\n            <th style=\\\"width:10%\\\">Director</th>\\n            <th style=\\\"width:10%\\\">No of Comments</th>\\n            <th style=\\\"width:30%\\\">Operations</th>\\n\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let movie of movies\\\">\\n            <td>{{ movie.title }}</td>\\n            <td>{{ movie.description }}</td>\\n            <td>{{ movie.genre }}</td>\\n            <td>{{ movie.minute }}</td>\\n            <td>{{ movie.yearOfRelease }}</td>\\n            <td>{{ movie.director }}</td>\\n            <td>{{ movie.numberOfComments }}</td>\\n            <td>\\n                <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/movie', movie.id]\\\" routerLinkActive=\\\"active\\\">Details</button> |\\n                <button class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/movie-add', movie.id]\\\">Edit</button> |\\n                <button class=\\\"btn btn-danger\\\" (click)=\\\" delete(movie.id)\\\">Delete</button>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<td><a class=\\\"btn btn-success\\\" [routerLink]=\\\"['/movie-add/0']\\\">Add movie</a></td>\\n\\n\\n\\n<!--<input [(ngModel)]=\\\"name\\\" />\\n\\n<p>{{name}}</p>\\n\\n\\n\\n<button (click)=\\\"submit()\\\">Submit!</button>\\n-->\\n\"","export default \"<header>\\n    <nav class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\">\\n        <div class=\\\"container\\\">\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">MOVIES</a>\\n            <button class=\\\"navbar-toggler\\\"\\n                    type=\\\"button\\\"\\n                    data-toggle=\\\"collapse\\\"\\n                    data-target=\\\".navbar-collapse\\\"\\n                    aria-label=\\\"Toggle navigation\\\"\\n                    [attr.aria-expanded]=\\\"isExpanded\\\"\\n                    (click)=\\\"toggle()\\\">\\n                <span class=\\\"navbar-toggler-icon\\\"></span>\\n            </button>\\n            <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\n                 [ngClass]=\\\"{ show: isExpanded }\\\">\\n                <ul class=\\\"navbar-nav flex-grow\\\">\\n\\n                    <li class=\\\"nav-item\\\"\\n                        [routerLinkActive]=\\\"['link-active']\\\"\\n                        [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\n                        <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\n                    </li>\\n\\n                    <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n                        <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/movie']\\\">Movie</a>\\n                    </li>\\n\\n                    <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n                        <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/comment']\\\">Comment</a>\\n                    </li>\\n\\n                \\n         \\n                </ul>\\n            </div>\\n        </div>\\n    </nav>\\n</header>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { CommentComponent } from './comment/comment.component';\r\nimport { MovieComponent } from './movie/movie.component';\r\nimport { MovieDetailsComponent } from './movie/movie-details/movie-details.component';\r\nimport { MovieAddComponent } from './movie/movie-add/movie-add.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CommentAddComponent } from './comment/comment-add/comment-add.component';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        NavMenuComponent,\r\n        HomeComponent,\r\n        CounterComponent,\r\n        FetchDataComponent,\r\n        CommentComponent,\r\n        MovieComponent,\r\n        MovieDetailsComponent,\r\n        MovieAddComponent,\r\n        CommentAddComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n        HttpClientModule,\r\n        FormsModule, ReactiveFormsModule,\r\n        RouterModule.forRoot([\r\n            { path: '', component: HomeComponent, pathMatch: 'full' },\r\n            { path: 'movie', component: MovieComponent },\r\n            { path: 'comment', component: CommentComponent },\r\n            { path: 'fetch-data', component: FetchDataComponent },\r\n            { path: 'movie/:movieId', component: MovieDetailsComponent },\r\n            { path: 'movie-add/:id', component: MovieAddComponent },\r\n        ]),\r\n        BrowserAnimationsModule\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1lbnQvY29tbWVudC1hZGQvY29tbWVudC1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comment-add',\n  templateUrl: './comment-add.component.html',\n  styleUrls: ['./comment-add.component.css']\n})\nexport class CommentAddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-comment',\r\n    templateUrl: './comment.component.html'\r\n})\r\nexport class CommentComponent {\r\n\r\n    public comments: Comment[];\r\n\r\n    public name: string = \"test\";\r\n\r\n    constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n        this.loadComments();\r\n    }\r\n\r\n    loadComments() {\r\n        this.http.get<Comment[]>(this.baseUrl + 'api/Comments').subscribe(result => {\r\n            this.comments = result;\r\n            console.log(this.comments);\r\n        }, error => console.error(error));\r\n    }\r\n\r\n    submit() {\r\n        var comment: Comment = <Comment>{};\r\n        comment.author = this.name;\r\n        comment.content = this.name;\r\n        comment.important = true\r\n\r\n        this.http.post(this.baseUrl + 'api/Comments', comment).subscribe(result => {\r\n            console.log('success!');\r\n            this.loadComments();\r\n        },\r\n            error => {\r\n\r\n                if (error.status == 400) {\r\n                    console.log(error.error.errors)\r\n                }\r\n         });\r\n    }\r\n}\r\n\r\n    interface Comment\r\n    {\r\n    author: string;\r\n    content: string;\r\n    important: boolean;\r\n    movieId: number\r\n    }\r\n\r\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-counter-component',\n    templateUrl: './counter.component.html'\n})\nexport class CounterComponent {\n    public currentCount: number = 2;\n\n    public name: string = \"test\"\n\n    public incrementCounter() {\n        this.currentCount++;\n\n        this.name = '';\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n    selector: 'app-fetch-data',\n    templateUrl: './fetch-data.component.html'\n})\nexport class FetchDataComponent {\n    public forecasts: WeatherForecast[];\n\n    public movies: Movie[];\n\n    public name: string = \"\";\n\n    constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\n\n        http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\n            this.forecasts = result;\n        }, error => console.error(error));\n\n        this.loadMovies();\n    }\n\n    loadMovies() {\n        this.http.get<Movie[]>(this.baseUrl + 'api/Movies').subscribe(result => {\n            this.movies = result;\n            console.log(this.movies);\n        }, error => console.error(error));\n    }\n\n    submit() {\n        var movie: Movie = <Movie>{};\n        movie.title = this.name;\n        movie.description = this.name;\n        movie.genre = Genre.Comedy;\n        movie.minute = 5;\n        movie.yearOfRelease = 1990;\n        movie.director = this.name;\n        movie.dateAdded = new Date();\n        movie.rating = 2;\n        movie.watched = true;\n \n\n        this.http.post(this.baseUrl + 'api/Movies', movie).subscribe(result => {\n\n            console.log('success!');\n\n            this.loadMovies();\n        },\n            error => {\n\n                if (error.status == 400) {\n                    console.log(error.error.errors)\n                }\n            });\n    }\n}\n\ninterface WeatherForecast {\n    date: string;\n    temperatureC: number;\n    temperatureF: number;\n    summary: string;\n}\n\ninterface Movie {\n    title: string;\n    description: string;\n    genre: Genre;\n    minute: number;\n    yearOfRelease: number;\n    director: string;\n    dateAdded: Date;\n    rating: number;\n    watched: boolean;\n}\n\nenum Genre {\n    Action =0,\n    Comedy=1,\n    Horror=2,\n    Thriller=3\n}\n","import { Component } from '@angular/core';\n\ndeclare var require: any;\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\n\nexport class HomeComponent {\n\n  public heroImageUrl = require(\"./images/movie1.jpg\");\n}\n","module.exports = __webpack_public_path__ + \"movie1.jpg\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmllL21vdmllLWFkZC9tb3ZpZS1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MovieService } from '../shared/movie.service';\r\nimport { Movie } from '../shared/movie.model';\r\nimport { MovieGenre } from '../shared/enum/movieGenre.enum';\r\nimport { Location } from '@angular/common';\r\nimport { MovieWatched } from '../shared/enum/movieWatched';\r\n\r\n@Component({\r\n    selector: 'app-movie-add',\r\n    templateUrl: './movie-add.component.html',\r\n    styleUrls: ['./movie-add.component.css']\r\n})\r\nexport class MovieAddComponent implements OnInit {\r\n\r\n    private movieForm: FormGroup;\r\n    public movieGenres = Object.values(MovieGenre);\r\n    public movieWatched = Object.values(MovieWatched);\r\n    public movie: Movie;\r\n    public id: string;\r\n\r\n\r\n    constructor(\r\n        private movieService: MovieService,\r\n        private location: Location,\r\n        private fb: FormBuilder,\r\n        private route: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n        this.addMovieForm();\r\n        this.getMovie();\r\n    }\r\n\r\n    addMovieForm() {\r\n        this.movieForm = this.fb.group({\r\n            title: ['', Validators.required],\r\n            description: ['', Validators.required],\r\n            genre: [''],\r\n            minute: [0, Validators.min(0)],\r\n            yearOfRelease: [0],\r\n            director: [''],\r\n            dateAdded: [''],\r\n            rating: [0],\r\n            watched: ['true']\r\n        });\r\n    }\r\n\r\n    getMovie() {\r\n        var id = parseInt(this.route.snapshot.paramMap.get('id'));\r\n\r\n        if (id !== 0) {\r\n            this.movieService.getMovie(id)\r\n                .subscribe(result => {\r\n                    this.movie = result;\r\n\r\n                    if (this.movie !== null) {\r\n                        this.movieForm.setValue({\r\n                            title: this.movie.title,\r\n                            description: this.movie.description,\r\n                            genre: this.movie.genre,\r\n                            minute: this.movie.minute,\r\n                            yearOfRelease: this.movie.yearOfRelease,\r\n                            director: this.movie.director,\r\n                            dateAdded: this.movie.dateAdded,\r\n                            rating: this.movie.rating,\r\n                            watched: this.movie.watched,\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    onSubmit({ value, valid }) {\r\n\r\n        console.log(\"wrong place\");\r\n\r\n        if (valid) {\r\n            var id = parseInt(this.route.snapshot.paramMap.get('id'));\r\n\r\n            if (id === 0) {\r\n                this.movieService.add(value)\r\n                    .subscribe(\r\n                        _ => this.location.back(),\r\n                        err => {\r\n                            const validationErrors = err.error.errors;\r\n\r\n                            Object.keys(validationErrors).forEach(prop => {\r\n                                const formControl = this.movieForm.get(prop.toLowerCase());\r\n                                if (formControl) {\r\n\r\n                                    formControl.setErrors({\r\n                                        serverError: validationErrors[prop][0]\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    );\r\n            } else {\r\n                value.id = id;\r\n                this.movieService.update(id, value)\r\n                    .subscribe(\r\n                        _ => this.location.back(),\r\n                        err => {\r\n                            const validationErrors = err.error.errors;\r\n\r\n                            Object.keys(validationErrors).forEach(prop => {\r\n                                const formControl = this.movieForm.get(prop.toLowerCase());\r\n                                if (formControl) {\r\n\r\n                                    formControl.setErrors({\r\n                                        serverError: validationErrors[prop][0]\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    );\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    goBack() {\r\n        this.location.back();\r\n    }\r\n\r\n}\r\n","export default \".button {\\r\\n    border: none;\\r\\n    background-color: transparent;\\r\\n}\\r\\n\\r\\n.btn-link {\\r\\n    border: none;\\r\\n    background-color: transparent;\\r\\n    border: none;\\r\\n    color: #212529\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW92aWUvbW92aWUtZGV0YWlscy9tb3ZpZS1kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDZCQUE2QjtJQUM3QixZQUFZO0lBQ1o7QUFDSiIsImZpbGUiOiJzcmMvYXBwL21vdmllL21vdmllLWRldGFpbHMvbW92aWUtZGV0YWlscy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ1dHRvbiB7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxufVxyXG5cclxuLmJ0bi1saW5rIHtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgY29sb3I6ICMyMTI1MjlcclxufVxyXG4iXX0= */\"","import { Component, OnInit, Inject, Input } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-movie-details',\r\n    templateUrl: './movie-details.component.html',\r\n    styleUrls: ['./movie-details.component.css']\r\n})\r\nexport class MovieDetailsComponent implements OnInit {\r\n\r\n    private movie: MovieWithDetails; \r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        @Inject('BASE_URL') private baseUrl: string,\r\n        private route: ActivatedRoute) {\r\n\r\n    }\r\n\r\n    loadMovie(movieId: string) {\r\n        this.http.get<MovieWithDetails>(this.baseUrl + 'api/Movies/'+ movieId).subscribe(result => {\r\n            this.movie = result;\r\n            console.log(this.movie);\r\n        }, error => console.error(error));\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.paramMap.subscribe(params => {\r\n            this.loadMovie(params.get('movieId'));\r\n        });\r\n    }\r\n\r\n}\r\ninterface Comment {\r\n    author: string,\r\n    content: string,\r\n    important: boolean\r\n}\r\n\r\ninterface MovieWithDetails {\r\n    title: string,\r\n    description: string,\r\n    genre: string,\r\n    minute: number,\r\n    yearOfRelease: number,\r\n    director: string,\r\n    dateAdded: Date,\r\n    rating: number,\r\n    watched: boolean,\r\n    comments: Comment[]\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-movie',\r\n    templateUrl: './movie.component.html'\r\n})\r\nexport class MovieComponent {\r\n   \r\n    public movies: Movie[];\r\n\r\n    public name: string = \"\";\r\n\r\n    constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string)\r\n    { \r\n        this.loadMovies();\r\n    }\r\n\r\n    loadMovies() {\r\n        this.http.get<Movie[]>(this.baseUrl + 'api/Movies').subscribe(result => {\r\n            this.movies = result;\r\n            console.log(this.movies);\r\n        }, error => console.error(error));\r\n    }\r\n\r\n    delete(movieId: string) {\r\n        if (confirm('Are you sure you want to delete the movie with id ' + movieId + '?')) {\r\n            this.http.delete(this.baseUrl + 'api/Movies/' + movieId)\r\n                .subscribe\r\n                (\r\n                    result => {\r\n                        alert('Movie successfully deleted!');\r\n                        this.loadMovies();\r\n                    },\r\n                    error => alert('Cannot delete movie - maybe it has comments?')\r\n                )\r\n        }\r\n    }\r\n    submit() {\r\n        var movie: Movie = <Movie>{};\r\n        movie.title = this.name;\r\n        movie.description = this.name;\r\n        movie.genre = Genre.Comedy;\r\n        movie.minute = 5;\r\n        movie.yearOfRelease = 1990;\r\n        movie.director = this.name;\r\n        movie.dateAdded = new Date();\r\n        movie.rating = 2;\r\n        movie.watched = true;\r\n\r\n\r\n        this.http.post(this.baseUrl + 'api/Movies', movie).subscribe(result => {\r\n            console.log('success!');\r\n            this.loadMovies();\r\n        },\r\n            error => {\r\n\r\n                if (error.status == 400) {\r\n                    console.log(error.error.errors)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\ninterface Movie {\r\n    id: number,\r\n    title: string;\r\n    description: string;\r\n    genre: Genre;\r\n    minute: number;\r\n    yearOfRelease: number;\r\n    director: string;\r\n    dateAdded: Date;\r\n    rating: number;\r\n    watched: boolean;\r\n}\r\n\r\nenum Genre {\r\n    Action = 0,\r\n    Comedy = 1,\r\n    Horror = 2,\r\n    Thriller = 3\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\nexport enum MovieGenre {\r\n    Action = \"Action\",\r\n    Comedy = \"Comedy\",\r\n    Horror = \"Horror\",\r\n    Thriller = \"Thriller\"\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\nexport enum MovieWatched {\r\n    True = \"True\",\r\n    False = \"False\"\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Movie } from './movie.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MovieService {\r\n\r\n    id: string;\r\n\r\n    constructor\r\n        (private httpClient: HttpClient,\r\n            @Inject('BASE_URL') private baseUrl: string,\r\n    ) { }\r\n\r\n    getAllMovies(): Observable<Movie[]> {\r\n        return this.httpClient.get<Array<Movie>>(this.baseUrl + 'api/Movies');\r\n    }\r\n\r\n    getMovie(id: number): Observable<Movie> {\r\n        return this.httpClient.get<Movie>(this.baseUrl + 'api/Movies/' + id);\r\n    }\r\n\r\n    add(movie: Movie): Observable<Movie> {\r\n        return this.httpClient.post<Movie>(this.baseUrl + 'api/Movies', movie);\r\n    }\r\n\r\n    delete(id: number): Observable<Movie> {\r\n        return this.httpClient.delete<Movie>(this.baseUrl + 'api/Movies/' + id);\r\n    }\r\n\r\n    update(id: number, movie: Movie): Observable<Movie> {\r\n        return this.httpClient.put<Movie>(this.baseUrl + 'api/Movies/' + id, movie);\r\n    }\r\n}\r\n","export default \"a.navbar-brand {\\n  white-space: normal;\\n  text-align: center;\\n  word-break: break-all;\\n}\\n\\nhtml {\\n  font-size: 14px;\\n}\\n\\n@media (min-width: 768px) {\\n  html {\\n    font-size: 16px;\\n  }\\n}\\n\\n.box-shadow {\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDE0cHg7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICB9XG59XG5cbi5ib3gtc2hhZG93IHtcbiAgYm94LXNoYWRvdzogMCAuMjVyZW0gLjc1cmVtIHJnYmEoMCwgMCwgMCwgLjA1KTtcbn1cbiJdfQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent {\n  isExpanded = false;\n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\nconst providers = [\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\n];\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}