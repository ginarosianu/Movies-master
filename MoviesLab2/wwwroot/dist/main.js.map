{"version":3,"sources":["./src/app/app.component.html","./src/app/comment/comment-add/comment-add.component.html","./src/app/comment/comment.component.html","./src/app/counter/counter.component.html","./src/app/fetch-data/fetch-data.component.html","./src/app/home/home.component.html","./src/app/login/login.component.html","./src/app/movie/movie-add/movie-add.component.html","./src/app/movie/movie-details/movie-details.component.html","./src/app/movie/movie.component.html","./src/app/nav-menu/nav-menu.component.html","./src/app/registration/registration.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/comment/comment-add/comment-add.component.css","./src/app/comment/comment-add/comment-add.component.ts","./src/app/comment/comment.component.ts","./src/app/core/core.module.ts","./src/app/core/guards/authentication.guard.ts","./src/app/core/services/application.service.ts","./src/app/core/services/http-request-interceptor.ts","./src/app/core/services/security.service.ts","./src/app/core/services/token.service.ts","./src/app/counter/counter.component.ts","./src/app/fetch-data/fetch-data.component.ts","./src/app/home/home.component.ts","./src/app/home/images/movie1.jpg","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/movie/movie-add/movie-add.component.css","./src/app/movie/movie-add/movie-add.component.ts","./src/app/movie/movie-details/movie-details.component.css","./src/app/movie/movie-details/movie-details.component.ts","./src/app/movie/movie.component.ts","./src/app/movie/shared/enum/movieGenre.enum.ts","./src/app/movie/shared/enum/movieWatched.ts","./src/app/movie/shared/movie.service.ts","./src/app/nav-menu/nav-menu.component.css","./src/app/nav-menu/nav-menu.component.ts","./src/app/registration/registration.component.css","./src/app/registration/registration.component.ts","./src/app/shared/angular-material.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default \"<body>\\n    <app-nav-menu></app-nav-menu>\\n\\n    <div class=\\\"container\\\">\\n\\n        <router-outlet></router-outlet>\\n\\n    </div>\\n\\n</body>\\n\"","export default \"<p>comment-add works!</p>\\r\\n\"","export default \"<h1 id=\\\"tableLabel\\\">COMMENTS</h1>\\r\\n\\r\\n<p>This is our Comments Board.</p>\\r\\n\\r\\n<p *ngIf=\\\"!comments\\\"><em>Loading...</em></p>\\r\\n\\r\\n\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"comments\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>Author</th>\\r\\n            <th>Content</th>\\r\\n            <th>Important</th>\\r\\n            <th>For Movie</th>\\r\\n            <th>Operations</th>\\r\\n\\r\\n        </tr>\\r\\n    </thead>\\r\\n\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let comment of comments\\\">\\r\\n            <td>{{ comment.author }}</td>\\r\\n            <td>{{ comment.content }}</td>\\r\\n            <td>{{ comment.important }}</td>\\r\\n            <td>{{ comment.movieid }}</td>\\r\\n            <td>\\r\\n                <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/comment', comment.id]\\\" routerLinkActive=\\\"active\\\">Details</button> |\\r\\n                <button class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/comment-add', comment.id]\\\">Edit</button> |\\r\\n                <button class=\\\"btn btn-danger\\\" (click)=\\\" delete(comment.id)\\\">Delete</button>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n\\r\\n<td><a class=\\\"btn btn-success\\\" [routerLink]=\\\"['/comment-add/0']\\\">Add comment</a></td>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\\r\\n\\r\\n\\r\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\r\\n\\r\\n<p>{{name}}</p>\\r\\n\\r\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\r\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\r\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\r\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\r\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\r\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\r\\n<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\r\\n\\r\\n\\r\\n<input type=\\\"text\\\" value=\\\"{{name}}\\\" />\\r\\n\\r\\n\\r\\n\\r\\n<p>{{name}}</p>\\r\\n<p>{{name}}</p>\\r\\n<p>{{name}}</p>\\r\\n<p>{{name}}</p>\\r\\n<p>{{name}}</p>\\r\\n<p>{{name}}</p>\\r\\n<p>{{name}}</p>\\r\\n<p>{{name}}</p>\\r\\n<p>{{name}}</p>\\r\\n\\r\\n\\r\\n<input type=\\\"text\\\" value=\\\"{{name}}\\\" />\\r\\n\\r\\n\\r\\n\\r\\n<p> {{name}}</p>\\r\\n\"","export default \"<h1 id=\\\"tableLabel\\\">MOVIES</h1>\\r\\n\\r\\n<p>This is our Movies Board.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"movies\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>Title</th>\\r\\n            <th>Description</th>\\r\\n            <th>Genre</th>\\r\\n            <th>Duration minutes</th>\\r\\n            <th>Year of fRelease</th>\\r\\n            <th>Director</th>\\r\\n            <th>Comments</th>\\r\\n\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let movie of movies\\\">\\r\\n            <td>{{ movie.title }}</td>\\r\\n            <td>{{ movie.description }}</td>\\r\\n            <td>{{ movie.genre }}</td>\\r\\n            <td>{{ movie.minute }}</td>\\r\\n            <td>{{ movie.yearOfRelease }}</td>\\r\\n            <td>{{ movie.director }}</td>\\r\\n            <td>{{ movie.comments }}</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n\\r\\n<p>Mai jos facem adaugarea unui film</p>\\r\\n\\r\\n\\r\\n<!--<input [(ngModel)]=\\\"name\\\" />\\r\\n\\r\\n<p>{{name}}</p>\\r\\n\\r\\n\\r\\n\\r\\n<button (click)=\\\"submit()\\\">Submit!</button>\\r\\n\\r\\n-->\\r\\n\"","export default \"<!--<h1>Hello, world!</h1>\\n<p>Welcome to your new single-page application, built with:</p>-->\\n      \\n\\n<img src=\\\"{{heroImageUrl}}\\\" style=\\\"width:100%\\\">\\n\\n\"","export default \"<!--<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Log in</mat-card-title>\\n    </mat-card-header>\\n\\n    <form class=\\\"example-form\\\">\\n        <mat-card-content>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input type=\\\"email\\\" matInput placeholder=\\\"Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"loginModel.email\\\">\\n            </mat-form-field>\\n\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"loginModel.password\\\">\\n            </mat-form-field>\\n        </mat-card-content>\\n        <button mat-stroked-button color=\\\"accent\\\" class=\\\"btn-block\\\" (click)=\\\"loginUser()\\\">Log in</button>\\n    </form>\\n</mat-card>-->\\n\\n    <mat-card class=\\\"example-card\\\">\\n        <mat-card-header>\\n            <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n            <mat-card-title>Log in</mat-card-title>\\n        </mat-card-header>\\n\\n        <mat-card-content>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input type=\\\"email\\\" matInput placeholder=\\\"Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"loginModel.email\\\">\\n            </mat-form-field>\\n\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"loginModel.password\\\">\\n            </mat-form-field>\\n        </mat-card-content>\\n\\n        <button mat-stroked-button color=\\\"accent\\\" class=\\\"btn-block\\\" (click)=\\\"loginUser()\\\">Log in</button>\\n    </mat-card>\\n\"","export default \"<!--<p>movie-add works!</p>-->\\r\\n<h1 id=\\\"tableLabel\\\"> Add new movie</h1>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\" row\\\">\\r\\n        <div class=\\\" col-10\\\">\\r\\n            <div class=\\\" jumbotron\\\">\\r\\n                <form [formGroup]=\\\"movieForm\\\" (ngSubmit)=\\\"onSubmit(movieForm)\\\">\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Title</label>\\r\\n                        <input type=\\\"text\\\" class=\\\" form-control\\\" formControlName=\\\"title\\\" />\\r\\n                        <!--<span *ngIf=\\\"form.get('title').errors?.required\\\">Title is required</span>-->\\r\\n                        <span *ngIf=\\\"movieForm.get('title').errors?.serverError\\\">\\r\\n                            {{ movieForm.get('title').errors?.serverError }}\\r\\n                        </span>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Description</label>\\r\\n                        <input type=\\\"text\\\" class=\\\" form-control\\\" formControlName=\\\"description\\\" />\\r\\n                        <!--<span *ngIf=\\\"form.get('description').errors?.required\\\">Description is required</span>-->\\r\\n                        <span *ngIf=\\\"movieForm.get('description').errors?.serverError\\\">\\r\\n                            {{ movieForm.get('description').errors?.serverError }}\\r\\n                        </span>\\r\\n                    </div>\\r\\n\\r\\n                    <!--<div class=\\\"form-group\\\">\\r\\n                        <label>Genre</label>\\r\\n                        <select class=\\\" form-control\\\" formControlName=\\\"genre\\\">\\r\\n                            <option value=\\\"0\\\">Select genre</option>\\r\\n                            <option *ngFor=\\\"let movieGenre of movieGenres\\\" [value]=\\\"movieGenre\\\">-->\\r\\n                                <!--{{movieGenre}}-->\\r\\n                            <!--</option>\\r\\n                        </select>\\r\\n                    </div>-->\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Genre</label>\\r\\n                        <select class=\\\" form-control\\\" formControlName=\\\"genre\\\">\\r\\n                            <option value=\\\"action\\\">Action </option>\\r\\n                            <option value=\\\"comedy\\\">Comedy</option>\\r\\n                            <option value=\\\"horror\\\">Horror </option>\\r\\n                            <option value=\\\"thriller\\\">Thriller </option>\\r\\n                        \\r\\n                        </select>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Minute</label>\\r\\n                        <input type=\\\"number\\\" class=\\\" form-control\\\" placeholder=\\\"0,00\\\" formControlName=\\\"minute\\\" />\\r\\n                        <!--<span *ngIf=\\\"form.get('minute').errors?.required\\\">Duration is required</span>-->\\r\\n                        <span *ngIf=\\\"movieForm.get('minute').errors?.serverError\\\">\\r\\n                            {{ movieForm.get('minute').errors?.serverError }}\\r\\n                        </span>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Year of Release</label>\\r\\n                        <input type=\\\"number\\\" class=\\\" form-control\\\" formControlName=\\\"yearOfRelease\\\" />\\r\\n                        <span *ngIf=\\\"movieForm.get('yearOfRelease').errors?.serverError\\\">\\r\\n                            {{ movieForm.get('yearOfRelease').errors?.serverError }}\\r\\n                        </span>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Director</label>\\r\\n                        <input type=\\\"text\\\" class=\\\" form-control\\\" formControlName=\\\"director\\\" />\\r\\n                        <!--<span *ngIf=\\\"form.get('director').errors?.required\\\">Director is required</span>-->\\r\\n                        <span *ngIf=\\\"movieForm.get('director').errors?.serverError\\\">\\r\\n                            {{ movieForm.get('director').errors?.serverError }}\\r\\n                        </span>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Date</label>\\r\\n                        <input type=\\\"datetime\\\" class=\\\" form-control\\\" placeholder=\\\"2020-06-14\\\" formControlName=\\\"dateAdded\\\" />\\r\\n                        <!--<span *ngIf=\\\"form.get('dateAdded').errors?.required\\\">Date is required</span>-->\\r\\n                        <span *ngIf=\\\"movieForm.get('dateAdded').errors?.serverError\\\">\\r\\n                            {{ movieForm.get('dateAdded').errors?.serverError }}\\r\\n                        </span>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Rating</label>\\r\\n                        <input type=\\\"number\\\" class=\\\" form-control\\\" placeholder=\\\"0,00\\\" formControlName=\\\"rating\\\" />\\r\\n                        <span *ngIf=\\\"movieForm.get('rating').errors?.serverError\\\">\\r\\n                            {{ movieForm.get('rating').errors?.serverError }}\\r\\n                        </span>\\r\\n                    </div>\\r\\n\\r\\n                    <!--<div class=\\\"form-group\\\">\\r\\n                        <label>Watched</label>\\r\\n                        <select class=\\\" form-control\\\" formControlName=\\\"watched\\\">\\r\\n                            <option value=\\\"0\\\">Select</option>\\r\\n                            <option *ngFor=\\\"let movieWatched of movieWatcheds\\\" [value]=\\\"movieWatched\\\">-->\\r\\n                                <!--{{movieWatched}}-->\\r\\n                            <!--</option>\\r\\n                        </select>\\r\\n                    </div>-->\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Watched</label>\\r\\n                        <select class=\\\" form-control\\\" formControlName=\\\"watched\\\">\\r\\n                            <option value=\\\"true\\\" selected=\\\"selected\\\">Yes</option>\\r\\n                            <option value=\\\"false\\\">No</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n\\r\\n                    <button class=\\\"btn btn-success float-left\\\" type='submit' [disabled]=\\\"!movieForm.valid\\\">Save</button>\\r\\n                    <button class=\\\"btn btn-success float-right\\\" (click)=\\\"goBack()\\\">Back</button>\\r\\n\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<p>movie-details works!</p>\\r\\n\\r\\n\\r\\n<p *ngIf=\\\"!movie\\\"><em>Loading ...</em></p>\\r\\n\\r\\n<a [routerLink]=\\\"['/movie']\\\" routerLinkActive=\\\"active\\\">Back</a>\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"movie\\\">\\r\\n    <tbody>\\r\\n        <tr>\\r\\n            <th>Title</th>\\r\\n            <td>{{ movie.title }}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <th>Description</th>\\r\\n            <td>{{ movie.description }}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <th>Genre</th>\\r\\n            <td>{{ movie.genre }}</td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n            <th>Duration minutes</th>\\r\\n            <td>{{ movie.minute }}</td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n            <th>Year of Release</th>\\r\\n            <td>{{ movie.yearOfRelease }}</td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n            <th>Director</th>\\r\\n            <td>{{ movie.director }}</td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n            <th>DateAdded</th>\\r\\n            <td>{{ movie.dateAdded }}</td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n            <th>Rating</th>\\r\\n            <td>{{ movie.rating }}</td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n            <th>Watched</th>\\r\\n            <td>{{ movie.watched }}</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<th>Comments</th>\\r\\n<table style=\\\"width:100%\\\" *ngIf=\\\"movie\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th style=\\\"width:30%\\\">Content</th>\\r\\n            <th style=\\\"width:30%\\\">Author</th>\\r\\n            <th style=\\\"width:30%\\\">Important</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tr *ngFor=\\\"let comment of movie.comments\\\">\\r\\n        <td style=\\\"width:30%\\\">{{ comment.content }}</td>\\r\\n        <td style=\\\"width:30%\\\">{{ comment.author }}</td>\\r\\n        <td style=\\\"width:30%\\\">{{ comment.important}}</td>\\r\\n    </tr>\\r\\n</table>\\r\\n<a [routerLink]=\\\"['/movie']\\\" routerLinkActive=\\\"active\\\">Back</a>\\r\\n\\r\\n\\r\\n\"","export default \"<h1 id=\\\"tableLabel\\\">MOVIES</h1>\\n\\n<p>This is our Movies Board.</p>\\n\\n<p *ngIf=\\\"!movies\\\"><em>Loading...</em></p>\\n\\n\\n<table style=\\\"width:100%\\\" class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"movies\\\">\\n    <thead>\\n        <tr>\\n            <th style=\\\"width:10%\\\">Title</th>\\n            <th style=\\\"width:10%\\\">Description</th>\\n            <th style=\\\"width:10%\\\">Genre</th>\\n            <th style=\\\"width:10%\\\">Duration minutes</th>\\n            <th style=\\\"width:10%\\\">Year of Release</th>\\n            <th style=\\\"width:10%\\\">Director</th>\\n            <th style=\\\"width:10%\\\">No of Comments</th>\\n            <th style=\\\"width:30%\\\">Operations</th>\\n\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let movie of movies\\\">\\n            <td>{{ movie.title }}</td>\\n            <td>{{ movie.description }}</td>\\n            <td>{{ movie.genre }}</td>\\n            <td>{{ movie.minute }}</td>\\n            <td>{{ movie.yearOfRelease }}</td>\\n            <td>{{ movie.director }}</td>\\n            <td>{{ movie.numberOfComments }}</td>\\n            <td>\\n                <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/movie', movie.id]\\\" routerLinkActive=\\\"active\\\">Details</button> |\\n                <button class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/movie-add', movie.id]\\\">Edit</button> |\\n                <button class=\\\"btn btn-danger\\\" (click)=\\\" delete(movie.id)\\\">Delete</button>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<td><a class=\\\"btn btn-success\\\" [routerLink]=\\\"['/movie-add/0']\\\">Add movie</a></td>\\n\\n\\n\\n<!--<input [(ngModel)]=\\\"name\\\" />\\n\\n<p>{{name}}</p>\\n\\n\\n\\n<button (click)=\\\"submit()\\\">Submit!</button>\\n-->\\n\"","export default \"<header>\\n    <nav class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\">\\n        <div class=\\\"container\\\">\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">MOVIES</a>\\n            <button class=\\\"navbar-toggler\\\"\\n                    type=\\\"button\\\"\\n                    data-toggle=\\\"collapse\\\"\\n                    data-target=\\\".navbar-collapse\\\"\\n                    aria-label=\\\"Toggle navigation\\\"\\n                    [attr.aria-expanded]=\\\"isExpanded\\\"\\n                    (click)=\\\"toggle()\\\">\\n                <span class=\\\"navbar-toggler-icon\\\"></span>\\n            </button>\\n            <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\n                 [ngClass]=\\\"{ show: isExpanded }\\\">\\n                <ul class=\\\"navbar-nav flex-grow\\\">\\n\\n                    <li class=\\\"nav-item\\\"\\n                        [routerLinkActive]=\\\"['link-active']\\\"\\n                        [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\n                        <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\n                    </li>\\n\\n                    <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n                        <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n                        <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/login']\\\">Sign In</a>\\n                    </li>\\n\\n\\n                    <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n                        <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/movie']\\\">Movie</a>\\n                    </li>\\n\\n                    <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\n                        <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/comment']\\\">Comment</a>\\n                    </li>\\n\\n\\n\\n                </ul>\\n            </div>\\n        </div>\\n    </nav>\\n</header>\\n\"","export default \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Register</mat-card-title>\\n    </mat-card-header>\\n\\n    <form class=\\\"example-form\\\">\\n\\n        <mat-card-content>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input type=\\\"email\\\" matInput placeholder=\\\"Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"registerModel.email\\\">\\n            </mat-form-field>\\n\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"registerModel.password\\\">\\n            </mat-form-field>\\n\\n        </mat-card-content>\\n\\n        <button mat-stroked-button color=\\\"accent\\\" class=\\\"btn-block\\\" (click)=\\\"registerUser()\\\">Register</button>\\n\\n    </form>\\n</mat-card>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AngularMaterialModule } from './shared/angular-material.module';\r\n\r\nimport { CoreModule } from './core/core.module'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { CommentComponent } from './comment/comment.component';\r\nimport { MovieComponent } from './movie/movie.component';\r\nimport { MovieDetailsComponent } from './movie/movie-details/movie-details.component';\r\nimport { MovieAddComponent } from './movie/movie-add/movie-add.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CommentAddComponent } from './comment/comment-add/comment-add.component';\r\n\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        NavMenuComponent,\r\n        HomeComponent,\r\n        CounterComponent,\r\n        FetchDataComponent,\r\n        CommentComponent,\r\n        MovieComponent,\r\n        MovieDetailsComponent,\r\n        MovieAddComponent,\r\n        CommentAddComponent,\r\n        RegistrationComponent,\r\n        LoginComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n        HttpClientModule,\r\n        FormsModule,\r\n        AngularMaterialModule,\r\n        ReactiveFormsModule,\r\n        RouterModule.forRoot([\r\n            { path: 'login', component: LoginComponent },\r\n            { path: 'register', component: RegistrationComponent },\r\n            { path: '', component: HomeComponent, pathMatch: 'full' },\r\n            { path: 'movie', component: MovieComponent },\r\n            { path: 'comment', component: CommentComponent },\r\n            { path: 'fetch-data', component: FetchDataComponent },\r\n            { path: 'movie/:movieId', component: MovieDetailsComponent },\r\n            { path: 'movie-add/:id', component: MovieAddComponent },\r\n        ]),\r\n        BrowserAnimationsModule\r\n\r\n    ],\r\n    exports: [AngularMaterialModule, CoreModule],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1lbnQvY29tbWVudC1hZGQvY29tbWVudC1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-comment-add',\r\n  templateUrl: './comment-add.component.html',\r\n  styleUrls: ['./comment-add.component.css']\r\n})\r\nexport class CommentAddComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-comment',\r\n    templateUrl: './comment.component.html'\r\n})\r\nexport class CommentComponent {\r\n\r\n    public comments: Comment[];\r\n\r\n    public name: string = \"test\";\r\n\r\n    constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n        this.loadComments();\r\n    }\r\n\r\n    loadComments() {\r\n        this.http.get<Comment[]>(this.baseUrl + 'api/Comments').subscribe(result => {\r\n            this.comments = result;\r\n            console.log(this.comments);\r\n        }, error => console.error(error));\r\n    }\r\n\r\n    submit() {\r\n        var comment: Comment = <Comment>{};\r\n        comment.author = this.name;\r\n        comment.content = this.name;\r\n        comment.important = true\r\n\r\n        this.http.post(this.baseUrl + 'api/Comments', comment).subscribe(result => {\r\n            console.log('success!');\r\n            this.loadComments();\r\n        },\r\n            error => {\r\n\r\n                if (error.status == 400) {\r\n                    console.log(error.error.errors)\r\n                }\r\n         });\r\n    }\r\n}\r\n\r\n    interface Comment\r\n    {\r\n    author: string;\r\n    content: string;\r\n    important: boolean;\r\n    movieId: number\r\n    }\r\n\r\n","import { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AuthenticationGuard } from './guards/authentication.guard';\n\nimport { HttpRequestInterceptor } from './services/http-request-interceptor';\n\nimport { SecurityService } from './services/security.service';\nimport { TokenService } from './services/token.service';\nimport { ApplicationService } from './services/application.service';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [],\n    providers: [\n        AuthenticationGuard,\n        SecurityService,\n        TokenService,\n        ApplicationService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: HttpRequestInterceptor,\n            multi: true\n        }\n    ],\n    exports: []\n})\n\nexport class CoreModule {\n\n}","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n    constructor() { }\n\n    canActivate() {\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { TokenService } from './token.service';\n\n@Injectable()\nexport class ApplicationService {\n\n    public baseUrl: string;\n\n    constructor(private tokenService: TokenService) {\n        this.baseUrl = document.getElementsByTagName('base')[0].href;\n    }\n\n    isLoggedIn() {\n        return this.tokenService.getToken() != null;\n    }\n\n    userEmail() {\n        var token = this.tokenService.getToken();\n\n        if (token != null)\n            return token.email;\n\n        return \"\";\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpRequest, HttpErrorResponse, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { empty, Observable, throwError, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { TokenService } from './token.service';\nimport { Token } from './security.models';\n\n@Injectable()\nexport class HttpRequestInterceptor implements HttpInterceptor {\n\n    constructor(\n        private router: Router,\n        private tokenService: TokenService\n    ) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        var token: Token = this.tokenService.getToken();\n\n        request = token ? request.clone(\n            {\n                headers: request.headers.set(\"Authorization\", \"Bearer \" + token.value)\n            }\n        ) : request;\n\n        return next.handle(request).pipe(\n            catchError(\n                (error: HttpErrorResponse, caught: Observable<HttpEvent<HttpErrorResponse>>) => {\n\n                    if (error.status === 401) {\n                        this.router.navigate(['/login']);\n                        return of<HttpEvent<HttpErrorResponse>>();\n                    }\n\n                    if (error.status === 403) {\n                        this.router.navigate(['/forbidden']);\n                        return of<HttpEvent<HttpErrorResponse>>();\n                    }\n                    return throwError(error);\n                }\n            )\n        );\n    }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observer, Observable } from 'rxjs';\n\nimport { Token, RegisterModel, LoginModel } from './security.models';\nimport { TokenService } from './token.service';\nimport { ApplicationService } from './application.service';\n\n@Injectable()\nexport class SecurityService {\n\n    constructor(\n        private httpClient: HttpClient,\n        private tokenService: TokenService,\n        private applicationService: ApplicationService) {\n    }\n\n    register(registerModel: RegisterModel) {\n        return new Observable<Token>((obs: Observer<Token>) => {\n            this.httpClient.post<Token>(`${this.applicationService.baseUrl}Account/Register`, registerModel).subscribe(token => {\n\n                this.tokenService.saveToken(token);\n\n                obs.next(token);\n                obs.complete();\n            });\n        });\n    }\n\n    login(loginModel: LoginModel) {\n        return new Observable<Token>((obs: Observer<Token>) => {\n            this.httpClient.post<Token>(`${this.applicationService.baseUrl}Account/Login`, loginModel).subscribe(token => {\n\n                this.tokenService.saveToken(token);\n\n                obs.next(token);\n                obs.complete();\n            });\n        });\n    }\n\n    logout() {\n        this.tokenService.deleteToken();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Token } from './security.models';\n\n@Injectable()\nexport class TokenService {\n\n    constructor() { }\n\n    saveToken(token: Token) {\n        localStorage.setItem(\"token\", JSON.stringify(token));\n    }\n\n    getToken(): Token | null {\n        return this.validate(JSON.parse(localStorage.getItem(\"token\") as string));\n    }\n\n    validate(token: Token | null): Token | null {\n        if (token) {\n            if (new Date(token.expiry) > new Date())\n                return token;\n        }\n\n        return null;\n    }\n\n    deleteToken() {\n        localStorage.removeItem(\"token\");\n    }\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-counter-component',\r\n    templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n    public currentCount: number = 2;\r\n\r\n    public name: string = \"test\"\r\n\r\n    public incrementCounter() {\r\n        this.currentCount++;\r\n\r\n        this.name = '';\r\n    }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-fetch-data',\r\n    templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n    public forecasts: WeatherForecast[];\r\n\r\n    public movies: Movie[];\r\n\r\n    public name: string = \"\";\r\n\r\n    constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n\r\n        http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n            this.forecasts = result;\r\n        }, error => console.error(error));\r\n\r\n        this.loadMovies();\r\n    }\r\n\r\n    loadMovies() {\r\n        this.http.get<Movie[]>(this.baseUrl + 'api/Movies').subscribe(result => {\r\n            this.movies = result;\r\n            console.log(this.movies);\r\n        }, error => console.error(error));\r\n    }\r\n\r\n    submit() {\r\n        var movie: Movie = <Movie>{};\r\n        movie.title = this.name;\r\n        movie.description = this.name;\r\n        movie.genre = Genre.Comedy;\r\n        movie.minute = 5;\r\n        movie.yearOfRelease = 1990;\r\n        movie.director = this.name;\r\n        movie.dateAdded = new Date();\r\n        movie.rating = 2;\r\n        movie.watched = true;\r\n \r\n\r\n        this.http.post(this.baseUrl + 'api/Movies', movie).subscribe(result => {\r\n\r\n            console.log('success!');\r\n\r\n            this.loadMovies();\r\n        },\r\n            error => {\r\n\r\n                if (error.status == 400) {\r\n                    console.log(error.error.errors)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\ninterface WeatherForecast {\r\n    date: string;\r\n    temperatureC: number;\r\n    temperatureF: number;\r\n    summary: string;\r\n}\r\n\r\ninterface Movie {\r\n    title: string;\r\n    description: string;\r\n    genre: Genre;\r\n    minute: number;\r\n    yearOfRelease: number;\r\n    director: string;\r\n    dateAdded: Date;\r\n    rating: number;\r\n    watched: boolean;\r\n}\r\n\r\nenum Genre {\r\n    Action =0,\r\n    Comedy=1,\r\n    Horror=2,\r\n    Thriller=3\r\n}\r\n","import { Component } from '@angular/core';\n\ndeclare var require: any;\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\n\nexport class HomeComponent {\n\n  public heroImageUrl = require(\"./images/movie1.jpg\");\n}\n","module.exports = __webpack_public_path__ + \"movie1.jpg\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { SecurityService } from '../core/services/security.service';\nimport { LoginModel } from '../core/services/security.models';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    public loginModel: LoginModel = <LoginModel>{};\n\n    constructor(private securityService: SecurityService, private router: Router) {\n    }\n\n    ngOnInit() {\n    }\n\n    loginUser() {\n        this.securityService.login(this.loginModel).subscribe(token => {\n            this.router.navigate(['/fetch-data']);\n        });\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdmllL21vdmllLWFkZC9tb3ZpZS1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MovieService } from '../shared/movie.service';\r\nimport { Movie } from '../shared/movie.model';\r\nimport { MovieGenre } from '../shared/enum/movieGenre.enum';\r\nimport { Location } from '@angular/common';\r\nimport { MovieWatched } from '../shared/enum/movieWatched';\r\n\r\n@Component({\r\n    selector: 'app-movie-add',\r\n    templateUrl: './movie-add.component.html',\r\n    styleUrls: ['./movie-add.component.css']\r\n})\r\nexport class MovieAddComponent implements OnInit {\r\n\r\n    private movieForm: FormGroup;\r\n    public movieGenres = Object.values(MovieGenre);\r\n    public movieWatched = Object.values(MovieWatched);\r\n    public movie: Movie;\r\n    public id: string;\r\n\r\n\r\n    constructor(\r\n        private movieService: MovieService,\r\n        private location: Location,\r\n        private fb: FormBuilder,\r\n        private route: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n        this.addMovieForm();\r\n        this.getMovie();\r\n    }\r\n\r\n    addMovieForm() {\r\n        this.movieForm = this.fb.group({\r\n            title: ['', Validators.required],\r\n            description: ['', Validators.required],\r\n            genre: [''],\r\n            minute: [0, Validators.min(0)],\r\n            yearOfRelease: [0],\r\n            director: [''],\r\n            dateAdded: [''],\r\n            rating: [0],\r\n            //watched: ['true']\r\n        });\r\n    }\r\n\r\n    getMovie() {\r\n        var id = parseInt(this.route.snapshot.paramMap.get('id'));\r\n\r\n        if (id !== 0) {\r\n            this.movieService.getMovie(id)\r\n                .subscribe(result => {\r\n                    this.movie = result;\r\n\r\n                    if (this.movie !== null) {\r\n                        this.movieForm.setValue({\r\n                            title: this.movie.title,\r\n                            description: this.movie.description,\r\n                            genre: this.movie.genre,\r\n                            minute: this.movie.minute,\r\n                            yearOfRelease: this.movie.yearOfRelease,\r\n                            director: this.movie.director,\r\n                            dateAdded: this.movie.dateAdded,\r\n                            rating: this.movie.rating,\r\n                            //watched: this.movie.watched,\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    onSubmit({ value, valid }) {\r\n\r\n        console.log(\"wrong place\");\r\n\r\n        if (valid) {\r\n            var id = parseInt(this.route.snapshot.paramMap.get('id'));\r\n\r\n            if (id === 0) {\r\n                this.movieService.add(value)\r\n                    .subscribe(\r\n                        _ => this.location.back(),\r\n                        err => {\r\n                            const validationErrors = err.error.errors;\r\n\r\n                            Object.keys(validationErrors).forEach(prop => {\r\n                                const formControl = this.movieForm.get(prop.toLowerCase());\r\n                                if (formControl) {\r\n\r\n                                    formControl.setErrors({\r\n                                        serverError: validationErrors[prop][0]\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    );\r\n            } else {\r\n                value.id = id;\r\n                this.movieService.update(id, value)\r\n                    .subscribe(\r\n                        _ => this.location.back(),\r\n                        err => {\r\n                            const validationErrors = err.error.errors;\r\n\r\n                            Object.keys(validationErrors).forEach(prop => {\r\n                                const formControl = this.movieForm.get(prop.toLowerCase());\r\n                                if (formControl) {\r\n\r\n                                    formControl.setErrors({\r\n                                        serverError: validationErrors[prop][0]\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    );\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    goBack() {\r\n        this.location.back();\r\n    }\r\n\r\n}\r\n","export default \".button {\\r\\n    border: none;\\r\\n    background-color: transparent;\\r\\n}\\r\\n\\r\\n.btn-link {\\r\\n    border: none;\\r\\n    background-color: transparent;\\r\\n    border: none;\\r\\n    color: #212529\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW92aWUvbW92aWUtZGV0YWlscy9tb3ZpZS1kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDZCQUE2QjtJQUM3QixZQUFZO0lBQ1o7QUFDSiIsImZpbGUiOiJzcmMvYXBwL21vdmllL21vdmllLWRldGFpbHMvbW92aWUtZGV0YWlscy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ1dHRvbiB7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxufVxyXG5cclxuLmJ0bi1saW5rIHtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgY29sb3I6ICMyMTI1MjlcclxufVxyXG4iXX0= */\"","import { Component, OnInit, Inject, Input } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-movie-details',\r\n    templateUrl: './movie-details.component.html',\r\n    styleUrls: ['./movie-details.component.css']\r\n})\r\nexport class MovieDetailsComponent implements OnInit {\r\n\r\n    private movie: MovieWithDetails; \r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        @Inject('BASE_URL') private baseUrl: string,\r\n        private route: ActivatedRoute) {\r\n\r\n    }\r\n\r\n    loadMovie(movieId: string) {\r\n        this.http.get<MovieWithDetails>(this.baseUrl + 'api/Movies/'+ movieId).subscribe(result => {\r\n            this.movie = result;\r\n            console.log(this.movie);\r\n        }, error => console.error(error));\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.paramMap.subscribe(params => {\r\n            this.loadMovie(params.get('movieId'));\r\n        });\r\n    }\r\n\r\n}\r\ninterface Comment {\r\n    author: string,\r\n    content: string,\r\n    important: boolean\r\n}\r\n\r\ninterface MovieWithDetails {\r\n    title: string,\r\n    description: string,\r\n    genre: string,\r\n    minute: number,\r\n    yearOfRelease: number,\r\n    director: string,\r\n    dateAdded: Date,\r\n    rating: number,\r\n    watched: boolean,\r\n    comments: Comment[]\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-movie',\r\n    templateUrl: './movie.component.html'\r\n})\r\nexport class MovieComponent {\r\n   \r\n    public movies: Movie[];\r\n\r\n    public name: string = \"\";\r\n\r\n    constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string)\r\n    { \r\n        this.loadMovies();\r\n    }\r\n\r\n    loadMovies() {\r\n        this.http.get<Movie[]>(this.baseUrl + 'api/Movies').subscribe(result => {\r\n            this.movies = result;\r\n            console.log(this.movies);\r\n        }, error => console.error(error));\r\n    }\r\n\r\n    delete(movieId: string) {\r\n        if (confirm('Are you sure you want to delete the movie with id ' + movieId + '?')) {\r\n            this.http.delete(this.baseUrl + 'api/Movies/' + movieId)\r\n                .subscribe\r\n                (\r\n                    result => {\r\n                        alert('Movie successfully deleted!');\r\n                        this.loadMovies();\r\n                    },\r\n                    error => alert('Cannot delete movie - maybe it has comments?')\r\n                )\r\n        }\r\n    }\r\n    submit() {\r\n        var movie: Movie = <Movie>{};\r\n        movie.title = this.name;\r\n        movie.description = this.name;\r\n        movie.genre = Genre.Comedy;\r\n        movie.minute = 5;\r\n        movie.yearOfRelease = 1990;\r\n        movie.director = this.name;\r\n        movie.dateAdded = new Date();\r\n        movie.rating = 2;\r\n        movie.watched = true;\r\n\r\n\r\n        this.http.post(this.baseUrl + 'api/Movies', movie).subscribe(result => {\r\n            console.log('success!');\r\n            this.loadMovies();\r\n        },\r\n            error => {\r\n\r\n                if (error.status == 400) {\r\n                    console.log(error.error.errors)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\ninterface Movie {\r\n    id: number,\r\n    title: string;\r\n    description: string;\r\n    genre: Genre;\r\n    minute: number;\r\n    yearOfRelease: number;\r\n    director: string;\r\n    dateAdded: Date;\r\n    rating: number;\r\n    watched: boolean;\r\n}\r\n\r\nenum Genre {\r\n    Action = 0,\r\n    Comedy = 1,\r\n    Horror = 2,\r\n    Thriller = 3\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\nexport enum MovieGenre {\r\n    Action = \"Action\",\r\n    Comedy = \"Comedy\",\r\n    Horror = \"Horror\",\r\n    Thriller = \"Thriller\"\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\nexport enum MovieWatched {\r\n    True = \"True\",\r\n    False = \"False\"\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Movie } from './movie.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MovieService {\r\n\r\n    id: string;\r\n\r\n    constructor\r\n        (private httpClient: HttpClient,\r\n            @Inject('BASE_URL') private baseUrl: string,\r\n    ) { }\r\n\r\n    getAllMovies(): Observable<Movie[]> {\r\n        return this.httpClient.get<Array<Movie>>(this.baseUrl + 'api/Movies');\r\n    }\r\n\r\n    getMovie(id: number): Observable<Movie> {\r\n        return this.httpClient.get<Movie>(this.baseUrl + 'api/Movies/' + id);\r\n    }\r\n\r\n    add(movie: Movie): Observable<Movie> {\r\n        return this.httpClient.post<Movie>(this.baseUrl + 'api/Movies', movie);\r\n    }\r\n\r\n    delete(id: number): Observable<Movie> {\r\n        return this.httpClient.delete<Movie>(this.baseUrl + 'api/Movies/' + id);\r\n    }\r\n\r\n    update(id: number, movie: Movie): Observable<Movie> {\r\n        return this.httpClient.put<Movie>(this.baseUrl + 'api/Movies/' + id, movie);\r\n    }\r\n}\r\n","export default \"a.navbar-brand {\\n  white-space: normal;\\n  text-align: center;\\n  word-break: break-all;\\n}\\n\\nhtml {\\n  font-size: 14px;\\n}\\n\\n@media (min-width: 768px) {\\n  html {\\n    font-size: 16px;\\n  }\\n}\\n\\n.box-shadow {\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDE0cHg7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICB9XG59XG5cbi5ib3gtc2hhZG93IHtcbiAgYm94LXNoYWRvdzogMCAuMjVyZW0gLjc1cmVtIHJnYmEoMCwgMCwgMCwgLjA1KTtcbn1cbiJdfQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent {\n  isExpanded = false;\n\n  collapse() {\n    this.isExpanded = false;\n  }\n\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { SecurityService } from '../core/services/security.service';\nimport { RegisterModel } from '../core/services/security.models';\n\n@Component({\n    selector: 'app-registration',\n    templateUrl: './registration.component.html',\n    styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n    public registerModel: RegisterModel = <RegisterModel>{};\n\n    constructor(private securityService: SecurityService, private router: Router) {\n    }\n\n    ngOnInit() {\n    }\n\n    registerUser() {\n        this.securityService.register(this.registerModel).subscribe(token => {\n            this.router.navigate(['/fetch-data']);\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n    MatCardModule,\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatBadgeModule,\r\n    MatListModule,\r\n    MatTableModule,\r\n    MatGridListModule,\r\n\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatChipsModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n   \r\n\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatSlideToggleModule,\r\n        MatSliderModule,\r\n        MatToolbarModule,\r\n        MatSidenavModule,\r\n        MatBadgeModule,\r\n        MatListModule,\r\n        MatTableModule,\r\n        MatGridListModule,\r\n\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatRadioModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatChipsModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatTooltipModule,\r\n\r\n        MatPaginatorModule,\r\n        MatProgressSpinnerModule,\r\n        MatProgressBarModule,\r\n        MatCardModule\r\n    ],\r\n    exports: [\r\n        MatSlideToggleModule,\r\n        MatSliderModule,\r\n        MatToolbarModule,\r\n        MatSidenavModule,\r\n        MatBadgeModule,\r\n        MatListModule,\r\n        MatTableModule,\r\n        MatGridListModule,\r\n\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatRadioModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatChipsModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatTooltipModule,\r\n\r\n        MatPaginatorModule,\r\n        MatProgressSpinnerModule,\r\n        MatProgressBarModule,\r\n        MatCardModule\r\n    ],\r\n})\r\n\r\nexport class AngularMaterialModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///"}